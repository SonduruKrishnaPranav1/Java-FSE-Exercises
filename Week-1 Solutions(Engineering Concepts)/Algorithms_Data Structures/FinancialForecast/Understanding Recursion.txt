Recursion:

Recursion is when a function calls itself to solve a smaller part of the same problem.

Every recursive function has two parts:

Base Case – the simplest scenario where no more recursion is needed.(Stopping Point of Recursive Calls)

Recursive Case – where the function calls itself with a smaller/simpler input.


Use-Cases of Recursion:

Recursion is useful when a problem can be broken down into smaller versions of itself, such as:

Factorials: n! = n * (n-1)!

Fibonacci numbers

Tree traversals, etc..



Example For Factorial using Recursive Code:


int factorial(int n) {
    if (n == 0) return 1;
    return n * factorial(n - 1);
}

Here, the function factorial() is calling itself until the n value becomes 0.